<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration >
  <context id="context1" targetRuntime="MyBatis3">
  	 <!-- 抑制警告 -->
        <property name="suppressTypeWarnings" value="true" />
        
        <plugin type="org.mybatis.generator.plugins.LeechPlugin" />
        <!-- generate entity时，生成serialVersionUID -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <!-- 这个插件只会增加字符串字段映射到一个JDBC字符的方法 -->
        <plugin type="org.mybatis.generator.plugins.CaseInsensitiveLikePlugin" />
        <!-- genenat entity时,生成toString -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        
        <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
        <commentGenerator>
            <property name="suppressAllComments" value="true" />
            <property name="suppressDate" value="true" />
        </commentGenerator>
	
	    <jdbcConnection driverClass="com.mysql.jdbc.Driver"
	            connectionURL="jdbc:mysql://10.202.4.39:3307/test?useUnicode=true&amp;charaterEncoding=utf-8"
	            userId="appmgr" password="appmgr123456">
	    </jdbcConnection>
	    
	    <!--                    Leech配置简要说明                                                                                                                           -->
	    <!--        1.指定targetProject的路径  (默认生成在编译目录target下)                 -->
	    <!--        2.模板请批量替换targetProject的"E://git/template/sgstemplate/testDubbo"  --> 
	    <!--        3.指定targetPackage的包路径                                                                                                                                   -->
	    <!--        4.CMD进如pom.xml目录                                                                                                                                                      -->
	    <!--        5.执行 mvn org.example.leech:leech-maven-plugin:sf.1.3.5:leech     -->
	    <!--        6.不需要生成的层直接注掉即可                                                                                                                                                -->
	    <!--        详细配置访问:http://10.202.8.138:8080/sfpp-web/sfpp-frontend/public/opensoftware.html?pcompSoftwareId=000013de8f3a5_51b4_44ca_b5d6_fe6fd83f8d58&pcompArticleId=00001a56d0890_280e_458e_bc97_bb9914bcb826 -->

		<!-- generate Model -->
		<!--<![CDATA[ targetProject 配置为配置为MAVEN时，它的实际路径是"${project.build.directory}/../src/main/java" ]]>-->
	    <!--<![CDATA[ targetProject 的值也支持绝对路径，如："E://git/template/sgstemplate/testDubbo-manager/src/main/java"]]>-->
	    <javaModelGenerator targetPackage="org.example.model" targetProject="E://git/template/sgstemplate/testDubbo-client/src/main/java">
	      <property name="enableSubPackages" value="true" />
	      <property name="trimStrings" value="true" />
	    </javaModelGenerator>

	    <sqlMapGenerator targetPackage="sqlmap.db"  targetProject="E://git/template/sgstemplate/testDubbo-dao/src/main/resources">
	      <property name="enableSubPackages" value="true" />
	    </sqlMapGenerator>

	    <javaClientGenerator type="XMLMAPPER" targetPackage="org.example.mapper"  targetProject="E://git/template/sgstemplate/testDubbo-dao/src/main/java">
	      <property name="enableSubPackages" value="true" />
	    </javaClientGenerator>
    
	    <!--1.配置节点存在,说明需要生成该层代码-->
	    <!--<![CDATA[属性"dubboxRpc" : dubbo型service]]>-->
	    <!--<![CDATA[属性"dubboxRest" : rest接口]]>-->
	    <!--<![CDATA[属性"resultObj" : 是否用result类封装]]>-->
	    <!--<![CDATA[属性"serviceImpTargetProject" : service实现类的存放路径]]>-->
	    <serviceGenerator targetPackage="org.example.service"  targetProject="E://git/template/sgstemplate/testDubbo-client/src/main/java">
	    	<property name="enableSubPackages" value="true" />
	    	<property name="dubboxRpc" value="true" />
	    	<property name="dubboxRest" value="true"/>
	    	<property name="resultObj" value="true"/>
	    	<property name="serviceImpTargetProject" value="E://git/template/sgstemplate/testDubbo-service/src/main/java"/>
	    </serviceGenerator>
    
    	<!--<![CDATA[属性"dubboXmlName" : dubbo生成的配置文件名，默认是spring-dubbo-service.xml，用户可以配置]]>-->	
	    <dubboXmlGenerator targetPackage="META-INF.spring"  targetProject="E://git/template/sgstemplate/testDubbo-service/src/main/resources">
	    	<property name="dubboXmlName" value="spring-dubbo-service.xml"/>
	    </dubboXmlGenerator>
    
	    <managerGenerator targetPackage="org.example.manager"  targetProject="E://git/template/sgstemplate/testDubbo-manager/src/main/java">
	    	<property name="enableSubPackages" value="true" />
	    </managerGenerator>
    
    	<!--<![CDATA[属性"enableSerivceresultObj" : service是否用Result类封装]]>-->
    	<!--
	    <controllerGenerator targetPackage="org.example.controller"  targetProject="MAVEN">
	    	<property name="enableSubPackages" value="true" />
	    	<property name="enableSerivceresultObj" value="false"/>
	    </controllerGenerator>
	    -->
	    
	    <!--
	    <jsGenerator targetPackage="org.example.js"  targetProject="MAVEN">
	    	<property name="enableSubPackages" value="true" />
	    	<property name="contextName" value="../" />
	    </jsGenerator>
	    -->
	    
	    <!--<![CDATA[属性"extPath" : 自定义html模板存放地址]]>-->
	    <!--<![CDATA[属性"jsPrefixPath" : html页面引上面生成JS路径的前缀]]>-->
	    <!--<![CDATA[属性"contextName" : 引入固定CSS以及JS的前缀]]>-->
	    <!--
	    <htmlGenerator targetPackage="org.example.html"  targetProject="MAVEN">
	    	<property name="enableSubPackages" value="true" />
        	<property name="extPath" value="" />
    		<property name="jsPrefixPath" value=".." />
        	<property name="contextName" value="../" />
	    </htmlGenerator>
	    -->

        <!-- 
		  catalog CDATA #IMPLIED
		  schema CDATA #IMPLIED
		  tableName CDATA #REQUIRED
		  alias CDATA #IMPLIED
		  domainObjectName CDATA #IMPLIED
		  enableInsert CDATA #IMPLIED
		  enableSelectByPrimaryKey CDATA #IMPLIED
		  enableUpdateByPrimaryKey CDATA #IMPLIED
		  enableDeleteByPrimaryKey CDATA #IMPLIED
		  enableCountByExample CDATA #IMPLIED
		  enableUpdateByExample CDATA #IMPLIED
		  enableDeleteByExample CDATA #IMPLIED
		  enableSelectByExample CDATA #IMPLIED
		  selectByExampleQueryId CDATA #IMPLIED
		  selectByPrimaryKeyQueryId CDATA #IMPLIED
		  modelType CDATA #IMPLIED
		  escapeWildcards CDATA #IMPLIED
		  delimitIdentifiers CDATA #IMPLIED
		  delimitAllColumns CDATA #IMPLIED
         -->
		 <table schema="" tableName="demo_user" domainObjectName="DemoUser" modelType="flat"
            enableCountByExample="false" enableUpdateByExample="false"  
            enableDeleteByExample="false" enableSelectByExample="true" 
            selectByExampleQueryId="false">
        </table>
  </context>
</generatorConfiguration>